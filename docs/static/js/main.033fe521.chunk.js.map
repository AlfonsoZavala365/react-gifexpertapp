{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAZS,SAACC,GAChBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACtB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCLCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA4BxC,OApBAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGjB,CAAEpB,IAYEqB,EDzByBK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAGrB,OAFAO,QAAQC,IAAIR,GAGR,qCACI,oBAAIJ,UAAU,0CAAd,SAA0DhB,IAExDoB,GAAW,mBAAGJ,UAAU,yCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADIA,EAAIC,aEc7BkB,EA7Ba,WAAM,IAAD,EAEO3C,mBAAS,CAAC,cAFjB,mBAEtB4C,EAFsB,KAEV7C,EAFU,KAM7B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGI,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADJA,Y,MCfxC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.033fe521.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {        \r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault(); //prevenir postback      \r\n        if ( inputValue.trim().length > 2 ){\r\n            //setCategories([inputValue,...categories])\r\n            setCategories( cats => [inputValue,...cats] );\r\n            setinputValue('');\r\n\r\n        }        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>            \r\n            <input\r\n                type=\"text\" \r\n                value = {inputValue}\r\n                onChange={ handleInputChange }\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=mcsHCsNkA3T3PHBLN1FCACOWEBzSpy1s`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();      \r\n    \r\n    const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url,\r\n            }\r\n    })   \r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    // console.log( id, title, url );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={ url } alt={ title } />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n        \r\n    const {data: images, loading} = useFetchGifs(category);    \r\n    console.log(loading);\r\n        \r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__fadeIn \">{ category }</h3>\r\n            \r\n            { loading && <p className=\"card animate__animated animate__flash \">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem  \r\n                                key = { img.id }\r\n                                {...img} \r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n ","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    \r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        })\r\n    }, [ category ])\r\n        // useEffect( () => {\r\n    //     getGifs( category ).then( setimages );\r\n    // },[category])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data:[1,2,3,4,5,6,7],\r\n    //         loading:false\r\n    //     })\r\n    // },3000);\r\n\r\n    return state; // { data:[], loading: true }\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Pubch']);\r\n//    const headleAdd = () =>  setCategories(['HunterXHunter',...categories]);\r\n    // const headleAdd = () =>  setCategories( cats => [...cats, 'HunterXHunter'] );\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr /> \r\n            {/* <button onClick={ headleAdd }>Agregar</button> */}\r\n            {\r\n                <ol>\r\n                    { \r\n                        categories.map( category => (\r\n                            <GifGrid \r\n                                key = { category }\r\n                                category= { category } \r\n                            />\r\n                        )) \r\n                    }\r\n                </ol>                \r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}